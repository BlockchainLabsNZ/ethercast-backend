service:
  name: crud-subs

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  region: us-east-1
  runtime: nodejs6.10
  environment: # service wide environment variables
    SUBSCRIPTIONS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-subs
    SUBSCRIPTIONS_ARN_TABLE: ${self:service}-${opt:stage, self:provider.stage}-sub-arns
    QUEUE_URL: "https://sqs.us-east-1.amazonaws.com/135461455689/notify.fifo"
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
    - Effect: Allow
      Action: # Gives permission to create sns topics
        - sns:CreateTopic
        - sns:Subscribe
        - sns:Unsubscribe
        - sns:ConfirmSubscription
      Resource: "arn:aws:sns:us-east-1:*:*"
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource: "arn:aws:sqs:us-east-1:*:*" # arn:aws:sqs:region:account-id:queuename

functions:
  auth:
    handler: auth.authorize

  handle-event:
    handler: handlers/handle-event.handle
    events:
      - http:
          method: post
          path: handle-event

  list-subs:
    handler: handlers/list-subs.handle
    events:
      - http:
          method: get
          path: subscriptions
          authorizer:
            name: auth
            resultTtlInSeconds: 300
            type: token
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  get-sub:
    handler: handlers/get-sub.handle
    events:
      - http:
          method: get
          path: subscriptions/{id}
          authorizer:
            name: auth
            resultTtlInSeconds: 300
            type: token
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  post-sub:
    handler: handlers/post-sub.handle
    events:
      - http:
          method: post
          path: subscriptions
          authorizer:
            name: auth
            resultTtlInSeconds: 300
            type: token
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  delete-sub:
    handler: handlers/delete-sub.handle
    events:
      - http:
          method: delete
          path: subscriptions/{id}
          authorizer:
            name: auth
            resultTtlInSeconds: 300
            type: token
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
resources:
  Resources:
    SubscriptionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SUBSCRIPTIONS_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: user
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          -
            IndexName: ByUser
            KeySchema:
              - AttributeName: user
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    SubscriptionArns:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.SUBSCRIPTIONS_ARN_TABLE}
        AttributeDefinitions:
          - AttributeName: subscriptionArn
            AttributeType: S
          - AttributeName: subscriptionId
            AttributeType: S
        KeySchema:
          - AttributeName: subscriptionArn
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          -
            IndexName: BySubscriptionId
            KeySchema:
              - AttributeName: subscriptionId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
